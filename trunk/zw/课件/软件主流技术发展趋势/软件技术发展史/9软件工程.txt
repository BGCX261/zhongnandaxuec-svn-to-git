几十年来软件行业一直想向建筑业靠齐，想达到同样的生产率、同样的产品质量，无奈软件产品远比建筑复杂，产品本身的不确定因素以及对产品的生产者依赖都过强，软件工程的效果还无法达到建筑工程的水平。中国没哪个漂亮高楼不是四川民工修的，但地球上还没哪个软件产品是四川民工写的。

1960年代，美国大学里开始出现授予计算机专业的学位，教人们写软件。从60年代中期到70年代中期，软件开始作为一种产品被广泛使用，出现了“软件作坊”专职应别人的需求写软件。在那个时代，很多的软件最后都得到了一个悲惨的结局，很多软件项目开发时间大大超出了规划的时间表，一些项目导致了财产的流失，甚至某些软件导致了人员伤亡，同时软件开发人员也发现软件开发的难度越来越大。OS 360操作系统被认为是一个典型的案例。“软件危机”就这样开始。

OS 360现在仍然被使用在IBM360系列主机中。这个经历了数十年，极度复杂的软件项目最后产生了一套不包括在原始设计方案之中的工作系统。OS 360是第一个超大型的软件项目，它使用了1000人左右的程序员。Fred Brooks在随后他的大作《人月神话》（The Mythical Man-Month）中曾经承认，在他管理这个项目的时候，他犯了一个价值数百万美元的错误。

1968年，NATO（北约）的科技委员会召集了近50名一流的编程人员、计算机科学家和工业界巨头，讨论和制定摆脱“软件危机”的对策。在那次会议上第一次提出了软件工程（software engineering）这个概念。

软件工程的发展方向一是从管理的角度，希望实现软件开发过程的工程化。“瀑布式”生命周期模型是60年代末“软件危机”后出现的第一个生命周期模型：分析→设计→编码→测试→维护。后来，又有人针对该模型的不足，提出了快速原型法、螺旋模型、喷泉模型等改进。现在，它们在软件开发的实践中被广泛采用。这方面的努力，还使人们认识到了文档的标准以及开发者之间、开发者与用户之间的交流方式的重要性。一些重要文档格式的标准被确定下来，包括变量、符号的命名规则以及源代码的规范。

软件工程发展的第二个方向，侧重于对软件开发过程中分析、设计的方法的研究。这方面的重要成果就是在1970年代风靡一时的结构化开发方法，即面向过程的开发以及结构化的分析、设计和相应的测试方法。1980年代末，面向对象的分析、设计方法（OOA和OOD）的出现使传统的开发方法发生了翻天覆地的变化。

1986年，IBM大型电脑之父Fred Brooks发表了他的著名论文《没有银弹》（No Silver Bullet: Essence and Accidents of Software Engineering）。在这篇著名的论文中他断言：“在10年内无法找到解决软件危机的银弹”（There will be no silver bullet within ten years）。这篇论文在其后引起了巨大的反响。

1990年代，面向对象建模语言UML（统一建模语言）出现，UML现在已经是面向对象技术领域内占主导地位的标准建模语言。UML统一了各种对象表示方法，并做了进一步的发展，形成一种定义良好、易于表达、功能强大且普遍适用的建模语言。它融入了软件工程领域的新思想、新方法和新技术，它的作用域不限于支持面向对象的分析与设计，还支持从需求分析开始的软件开发全过程。

1993年，美国卡内基梅隆大学软件工程研究所（SEI）推出现在还在用的CMM 1.1版。CMM即软件过程成熟度模型（Capability Maturity Model），是从企业管理的角度提出的软件过程管理，即关注于软件生存周期中所实施的一系列活动并通过过程度量、过程评价和过程改进等涉及对所建立的软件过程及其实例进行不断优化的活动使得软件过程循环往复、螺旋上升式地发展。目前通过CMM5的国内相关公司有：东软、用友、中兴、华为、神州数码、摩托罗拉中国、惠普中国等。

CMM等用文档的方式记录开发过程，是一种很好的解决方法，可以令从前的软件靠人来管理上升到用数据来管理，这种方法取得了一定的效果，但是所耗费的成本也是惊人的。

1990年代末2000年代初出现的“敏捷开发”（Agile Development）被认为是软件工程的一个重要的发展。它强调软件开发应当是能够对未来可能出现的变化和不确定性作出快速反应。 敏捷开发被认为是一种“轻量级”的方法，而轻量级方法中最负盛名的是“极限编程”（Extreme Programming，简称为XP）。敏捷开发让软件工程师更有效率和更低成本地响应需求的变更，敏捷开发方法中最具可操作性的就是基于代码白盒测试的“测试驱动”，用的工具最早有Java的JUnit、后来有Delphi的DUnit、.NET的NUnit等等版本，微软许多项目代码如MSBuild、EntLib也都写测试用例。

与轻量级方法相对应的是“重量级方法”的存在。重量级方法强调以开发过程为中心，而不是以人为中心。重量级方法的例子比如RUP（Rational Unified Process），RUP由Rational公司发展，1998年版本为5.0，包含一整套的工具和方法论，2003年IBM收购了Rational。 

以上是软件工程的发展概括，我们再来看看面向对象的领域内有什么发展。

1979年，出现开发交互式应用的全新架构：MVC，是一个由施乐（Xerox）公司开发的Smalltalk用户界面框架，应用程序被分为3类组件：模型、视图、以及控制器（Model、View、Controller）。以后的各种软件框架几乎都是MVC架构的，包括Delphi的DataSet/DB Control/DataSource。

1991年，在美国的Erich Gamma、Richard Helm、Ralph Johnson、John Vlissides合作出版了《Design Patterns - Elements of Reusable Object-Oriented Software》一书，在此书中共收录了23个设计模式。这四位作者在软件开发领域里也以他们的匿名著称Gang of Four（四人帮，简称GoF），他们在此书中的协作导致了软件设计模式的突破。设计模式已经成为基于任何编程语言进行面向对象程序编写的程序员的共同语言，设计模式的概念源自1970年代建筑师克里斯托佛.亚历山大编制的一本汇集设计模式的书，但是这种设计模式的思想在建筑设计领域里的影响远没有后来在软件开发领域里传播的广泛。

1996年，出现面向方面的编程（Aspect Oriented Programming，简称AOP），这被认为是近年来软件工程的另外一个重要发展。这里的方面指的是完成一个功能的对象和函数的集合。在这一方面相关的内容有泛型编程（Generic Programming）和模板。 

1990年代前期开始，ORM（对象关系映射）技术就开始发展，用于解决对象域与关系模型的代沟问题；作为成熟产品，现有的各种商业中间件如EJB、Apusic都包含有，目前开源的有最新版本Hibernate 3.2.4（Java）、NHibernate 1.2.0（.NET）、Ruby on Rails 1.8.5。

1990年代后期开始，中间件（Middleware Software）逐渐形成一个产业，中间件和操作系统、数据库构成计算机软件的基础，属于可复用软件的范畴；2004年中间件国际市场份额近97亿美元，业内人士认为，未来基于Internet的电子商务体系将有79%建筑在中间件的基础之上；国际上做中间件的厂商有BEA、IBM、Microsoft、HP、SUN、Oracle等等；国内有中创、普元、金蝶、中关村科技、点击科技等，2004年占国内市场份额近30%。
